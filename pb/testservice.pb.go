// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: testservice.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Testservice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Age           int32                  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Testservice) Reset() {
	*x = Testservice{}
	mi := &file_testservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Testservice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Testservice) ProtoMessage() {}

func (x *Testservice) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Testservice.ProtoReflect.Descriptor instead.
func (*Testservice) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{0}
}

func (x *Testservice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Testservice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Testservice) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

type CreateTestserviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Testservice           `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestserviceRequest) Reset() {
	*x = CreateTestserviceRequest{}
	mi := &file_testservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestserviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestserviceRequest) ProtoMessage() {}

func (x *CreateTestserviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestserviceRequest.ProtoReflect.Descriptor instead.
func (*CreateTestserviceRequest) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTestserviceRequest) GetData() *Testservice {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateTestserviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Testservice           `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestserviceResponse) Reset() {
	*x = CreateTestserviceResponse{}
	mi := &file_testservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestserviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestserviceResponse) ProtoMessage() {}

func (x *CreateTestserviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestserviceResponse.ProtoReflect.Descriptor instead.
func (*CreateTestserviceResponse) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTestserviceResponse) GetData() *Testservice {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTestserviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestserviceRequest) Reset() {
	*x = GetTestserviceRequest{}
	mi := &file_testservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestserviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestserviceRequest) ProtoMessage() {}

func (x *GetTestserviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestserviceRequest.ProtoReflect.Descriptor instead.
func (*GetTestserviceRequest) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{3}
}

func (x *GetTestserviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTestserviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Testservice           `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestserviceResponse) Reset() {
	*x = GetTestserviceResponse{}
	mi := &file_testservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestserviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestserviceResponse) ProtoMessage() {}

func (x *GetTestserviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestserviceResponse.ProtoReflect.Descriptor instead.
func (*GetTestserviceResponse) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{4}
}

func (x *GetTestserviceResponse) GetData() *Testservice {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateTestserviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Testservice           `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestserviceRequest) Reset() {
	*x = UpdateTestserviceRequest{}
	mi := &file_testservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestserviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestserviceRequest) ProtoMessage() {}

func (x *UpdateTestserviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestserviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestserviceRequest) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTestserviceRequest) GetData() *Testservice {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateTestserviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Testservice           `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestserviceResponse) Reset() {
	*x = UpdateTestserviceResponse{}
	mi := &file_testservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestserviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestserviceResponse) ProtoMessage() {}

func (x *UpdateTestserviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestserviceResponse.ProtoReflect.Descriptor instead.
func (*UpdateTestserviceResponse) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTestserviceResponse) GetData() *Testservice {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteTestserviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTestserviceRequest) Reset() {
	*x = DeleteTestserviceRequest{}
	mi := &file_testservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTestserviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestserviceRequest) ProtoMessage() {}

func (x *DeleteTestserviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestserviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteTestserviceRequest) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTestserviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTestserviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTestserviceResponse) Reset() {
	*x = DeleteTestserviceResponse{}
	mi := &file_testservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTestserviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestserviceResponse) ProtoMessage() {}

func (x *DeleteTestserviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestserviceResponse.ProtoReflect.Descriptor instead.
func (*DeleteTestserviceResponse) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTestserviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListTestservicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTestservicesRequest) Reset() {
	*x = ListTestservicesRequest{}
	mi := &file_testservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTestservicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestservicesRequest) ProtoMessage() {}

func (x *ListTestservicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestservicesRequest.ProtoReflect.Descriptor instead.
func (*ListTestservicesRequest) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{9}
}

type ListTestservicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Testservice         `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTestservicesResponse) Reset() {
	*x = ListTestservicesResponse{}
	mi := &file_testservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTestservicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestservicesResponse) ProtoMessage() {}

func (x *ListTestservicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestservicesResponse.ProtoReflect.Descriptor instead.
func (*ListTestservicesResponse) Descriptor() ([]byte, []int) {
	return file_testservice_proto_rawDescGZIP(), []int{10}
}

func (x *ListTestservicesResponse) GetData() []*Testservice {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_testservice_proto protoreflect.FileDescriptor

const file_testservice_proto_rawDesc = "" +
	"\n" +
	"\x11testservice.proto\x12\x02pb\x1a\x1cgoogle/api/annotations.proto\"C\n" +
	"\vTestservice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03age\x18\x03 \x01(\x05R\x03age\"?\n" +
	"\x18CreateTestserviceRequest\x12#\n" +
	"\x04data\x18\x01 \x01(\v2\x0f.pb.TestserviceR\x04data\"@\n" +
	"\x19CreateTestserviceResponse\x12#\n" +
	"\x04data\x18\x01 \x01(\v2\x0f.pb.TestserviceR\x04data\"'\n" +
	"\x15GetTestserviceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"=\n" +
	"\x16GetTestserviceResponse\x12#\n" +
	"\x04data\x18\x01 \x01(\v2\x0f.pb.TestserviceR\x04data\"?\n" +
	"\x18UpdateTestserviceRequest\x12#\n" +
	"\x04data\x18\x01 \x01(\v2\x0f.pb.TestserviceR\x04data\"@\n" +
	"\x19UpdateTestserviceResponse\x12#\n" +
	"\x04data\x18\x01 \x01(\v2\x0f.pb.TestserviceR\x04data\"*\n" +
	"\x18DeleteTestserviceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"5\n" +
	"\x19DeleteTestserviceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x19\n" +
	"\x17ListTestservicesRequest\"?\n" +
	"\x18ListTestservicesResponse\x12#\n" +
	"\x04data\x18\x01 \x03(\v2\x0f.pb.TestserviceR\x04data2\xbe\x04\n" +
	"\x12TestserviceService\x12m\n" +
	"\x11CreateTestservice\x12\x1c.pb.CreateTestserviceRequest\x1a\x1d.pb.CreateTestserviceResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/testservices\x12f\n" +
	"\x0eGetTestservice\x12\x19.pb.GetTestserviceRequest\x1a\x1a.pb.GetTestserviceResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/testservices/{id}\x12w\n" +
	"\x11UpdateTestservice\x12\x1c.pb.UpdateTestserviceRequest\x1a\x1d.pb.UpdateTestserviceResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\x1a\x1a/v1/testservices/{data.id}\x12o\n" +
	"\x11DeleteTestservice\x12\x1c.pb.DeleteTestserviceRequest\x1a\x1d.pb.DeleteTestserviceResponse\"\x1d\x82\xd3\xe4\x93\x02\x17*\x15/v1/testservices/{id}\x12g\n" +
	"\x10ListTestservices\x12\x1b.pb.ListTestservicesRequest\x1a\x1c.pb.ListTestservicesResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/testservicesB\x1aZ\x18grpc_anotation_sample/pbb\x06proto3"

var (
	file_testservice_proto_rawDescOnce sync.Once
	file_testservice_proto_rawDescData []byte
)

func file_testservice_proto_rawDescGZIP() []byte {
	file_testservice_proto_rawDescOnce.Do(func() {
		file_testservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_testservice_proto_rawDesc), len(file_testservice_proto_rawDesc)))
	})
	return file_testservice_proto_rawDescData
}

var file_testservice_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_testservice_proto_goTypes = []any{
	(*Testservice)(nil),               // 0: pb.Testservice
	(*CreateTestserviceRequest)(nil),  // 1: pb.CreateTestserviceRequest
	(*CreateTestserviceResponse)(nil), // 2: pb.CreateTestserviceResponse
	(*GetTestserviceRequest)(nil),     // 3: pb.GetTestserviceRequest
	(*GetTestserviceResponse)(nil),    // 4: pb.GetTestserviceResponse
	(*UpdateTestserviceRequest)(nil),  // 5: pb.UpdateTestserviceRequest
	(*UpdateTestserviceResponse)(nil), // 6: pb.UpdateTestserviceResponse
	(*DeleteTestserviceRequest)(nil),  // 7: pb.DeleteTestserviceRequest
	(*DeleteTestserviceResponse)(nil), // 8: pb.DeleteTestserviceResponse
	(*ListTestservicesRequest)(nil),   // 9: pb.ListTestservicesRequest
	(*ListTestservicesResponse)(nil),  // 10: pb.ListTestservicesResponse
}
var file_testservice_proto_depIdxs = []int32{
	0,  // 0: pb.CreateTestserviceRequest.data:type_name -> pb.Testservice
	0,  // 1: pb.CreateTestserviceResponse.data:type_name -> pb.Testservice
	0,  // 2: pb.GetTestserviceResponse.data:type_name -> pb.Testservice
	0,  // 3: pb.UpdateTestserviceRequest.data:type_name -> pb.Testservice
	0,  // 4: pb.UpdateTestserviceResponse.data:type_name -> pb.Testservice
	0,  // 5: pb.ListTestservicesResponse.data:type_name -> pb.Testservice
	1,  // 6: pb.TestserviceService.CreateTestservice:input_type -> pb.CreateTestserviceRequest
	3,  // 7: pb.TestserviceService.GetTestservice:input_type -> pb.GetTestserviceRequest
	5,  // 8: pb.TestserviceService.UpdateTestservice:input_type -> pb.UpdateTestserviceRequest
	7,  // 9: pb.TestserviceService.DeleteTestservice:input_type -> pb.DeleteTestserviceRequest
	9,  // 10: pb.TestserviceService.ListTestservices:input_type -> pb.ListTestservicesRequest
	2,  // 11: pb.TestserviceService.CreateTestservice:output_type -> pb.CreateTestserviceResponse
	4,  // 12: pb.TestserviceService.GetTestservice:output_type -> pb.GetTestserviceResponse
	6,  // 13: pb.TestserviceService.UpdateTestservice:output_type -> pb.UpdateTestserviceResponse
	8,  // 14: pb.TestserviceService.DeleteTestservice:output_type -> pb.DeleteTestserviceResponse
	10, // 15: pb.TestserviceService.ListTestservices:output_type -> pb.ListTestservicesResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_testservice_proto_init() }
func file_testservice_proto_init() {
	if File_testservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_testservice_proto_rawDesc), len(file_testservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_testservice_proto_goTypes,
		DependencyIndexes: file_testservice_proto_depIdxs,
		MessageInfos:      file_testservice_proto_msgTypes,
	}.Build()
	File_testservice_proto = out.File
	file_testservice_proto_goTypes = nil
	file_testservice_proto_depIdxs = nil
}
