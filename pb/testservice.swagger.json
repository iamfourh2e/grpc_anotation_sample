{
  "swagger": "2.0",
  "info": {
    "title": "testservice.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "TestserviceService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/testservices": {
      "get": {
        "operationId": "TestserviceService_ListTestservices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbListTestservicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TestserviceService"
        ]
      },
      "post": {
        "operationId": "TestserviceService_CreateTestservice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateTestserviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateTestserviceRequest"
            }
          }
        ],
        "tags": [
          "TestserviceService"
        ]
      }
    },
    "/v1/testservices/{data.id}": {
      "put": {
        "operationId": "TestserviceService_UpdateTestservice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateTestserviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "data.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestserviceServiceUpdateTestserviceBody"
            }
          }
        ],
        "tags": [
          "TestserviceService"
        ]
      }
    },
    "/v1/testservices/{id}": {
      "get": {
        "operationId": "TestserviceService_GetTestservice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetTestserviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TestserviceService"
        ]
      },
      "delete": {
        "operationId": "TestserviceService_DeleteTestservice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteTestserviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TestserviceService"
        ]
      }
    }
  },
  "definitions": {
    "TestserviceServiceUpdateTestserviceBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "pbCreateTestserviceRequest": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbTestservice"
        }
      }
    },
    "pbCreateTestserviceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbTestservice"
        }
      }
    },
    "pbDeleteTestserviceResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "pbGetTestserviceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbTestservice"
        }
      }
    },
    "pbListTestservicesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbTestservice"
          }
        }
      }
    },
    "pbTestservice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbUpdateTestserviceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbTestservice"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
